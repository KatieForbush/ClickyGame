{"ast":null,"code":"var _jsxFileName = \"/Users/kate/Desktop/ClickyGame/src/App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport \"./app.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      card,\n      score: 0,\n      highscore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      this.state.card.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over :( \\nscore: \".concat(this.state.score));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.clickCount = id => {\n      this.state.card.find((o, i) => {\n        if (o.id === id) {\n          if (card[i].count === 0) {\n            card[i].count = card[i].count + 1;\n            this.setState({\n              score: this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n            this.state.card.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.gameOver();\n          }\n        }\n      });\n    };\n  }\n\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Clicky Game\"), this.state.card.map(card => React.createElement(Card, {\n      clickCount: this.clickCount,\n      id: card.id,\n      key: card.id,\n      image: card.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kate/Desktop/ClickyGame/src/App.js"],"names":["React","Component","Card","Wrapper","Header","cards","App","state","card","score","highscore","gameOver","setState","console","log","forEach","count","alert","clickCount","id","find","o","i","sort","Math","random","render","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,IADM;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFkB;;AAAA,SAQ1BC,QAR0B,GAQf,MAAM;AACf,UAAI,KAAKJ,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWG,SAAlC,EAA6C;AAC3C,aAAKE,QAAL,CAAc;AAACF,UAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWE;AAAvB,SAAd,EAA6C,YAAW;AACtDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWG,SAAvB;AACD,SAFD;AAGD;;AACD,WAAKH,KAAL,CAAWC,IAAX,CAAgBO,OAAhB,CAAwBP,IAAI,IAAI;AAC9BA,QAAAA,IAAI,CAACQ,KAAL,GAAa,CAAb;AACD,OAFD;AAGAC,MAAAA,KAAK,iCAA0B,KAAKV,KAAL,CAAWE,KAArC,EAAL;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,aAAO,IAAP;AACD,KApByB;;AAAA,SAsB1BS,UAtB0B,GAsBbC,EAAE,IAAI;AACjB,WAAKZ,KAAL,CAAWC,IAAX,CAAgBY,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7B,YAAID,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACf,cAAGX,IAAI,CAACc,CAAD,CAAJ,CAAQN,KAAR,KAAkB,CAArB,EAAuB;AACrBR,YAAAA,IAAI,CAACc,CAAD,CAAJ,CAAQN,KAAR,GAAgBR,IAAI,CAACc,CAAD,CAAJ,CAAQN,KAAR,GAAgB,CAAhC;AACA,iBAAKJ,QAAL,CAAc;AAACH,cAAAA,KAAK,EAAG,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AAA5B,aAAd,EAA8C,YAAU;AACtDI,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,KAAvB;AACD,aAFD;AAGA,iBAAKF,KAAL,CAAWC,IAAX,CAAgBe,IAAhB,CAAqB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA3C;AACA,mBAAO,IAAP;AACD,WAPD,MAOO;AACL,iBAAKd,QAAL;AACD;AACF;AACF,OAbD;AAcD,KArCyB;AAAA;;AAsC1B;AACAe,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,KAA1B;AAAiC,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,KAAKH,KAAL,CAAWC,IAAX,CAAgBmB,GAAhB,CAAoBnB,IAAI,IACvB,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKU,UADnB;AAEE,MAAA,EAAE,EAAEV,IAAI,CAACW,EAFX;AAGE,MAAA,GAAG,EAAEX,IAAI,CAACW,EAHZ;AAIE,MAAA,KAAK,EAAEX,IAAI,CAACoB,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAaD;;AArDyB;;AAwD5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport \"./app.css\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    card,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.card.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.card.find((o, i) => {\n      if (o.id === id) {\n        if(card[i].count === 0){\n          card[i].count = card[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.card.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n  // Map over this.state.cards and render a cardCard component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n        {this.state.card.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}